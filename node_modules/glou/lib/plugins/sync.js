'use strict';

var util = require('util');

var _ = require('lodash');
var Transform = require('readable-stream/transform');

function Sync(onFlush) {
  Transform.call(this, {objectMode: true});
  this.chunks = [];
  this.onFlush = onFlush || _.noop;
}
util.inherits(Sync, Transform);

Sync.prototype._transform = function _transform(chunk, enc, cb) {
  this.chunks.push(chunk);
  cb();
};

Sync.prototype._flush = function _flush(cb) {
  function endCb() {
    _.each(this.chunks, function(chunk) {
      this.push(chunk);
    }, this);
    cb();
  }

  this.onFlush(endCb.bind(this));

  if (!this.onFlush.length)
    endCb.call(this);
};

module.exports = function sync(onFlush) {
  return new Sync(onFlush);
};
module.exports.Sync = Sync;
